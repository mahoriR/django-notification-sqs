"""
Django settings for mail_khaifa project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from decouple import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = config('SECRET_KEY')

DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = []


# Application definition
USER_APPS = [
    'notification.apps.NotificationConfig',
    'ext_svc_mgr.apps.ExtSvcMgrConfig',
    ]

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS=[
    'rest_framework',
]

INSTALLED_APPS = DJANGO_APPS + USER_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mail_khaifa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mail_khaifa.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

import dj_database_url

DATABASE_URL = config('DATABASE_URL')
DATABASES = {}
DEFAULT_DB_CONFIG = dj_database_url.parse(DATABASE_URL, conn_max_age=600, ssl_require=True)
DEFAULT_DB_CONFIG['TEST']={'NAME': config('TEST_DB_NAME')}
DATABASES['default'] = DEFAULT_DB_CONFIG

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


REST_FRAMEWORK = {

    # PageNumberPagination leads to page being query param to all paginated responses
    # GET https://api.example.org/accounts/?page=4
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',

    #This is default, each view can override
    'PAGE_SIZE': 10,

    # Mail khaifa is to be used internally only!
    # No need of auth
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    #https://www.django-rest-framework.org/api-guide/versioning/#namespaceversioning
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
    'TEST_REQUEST_DEFAULT_FORMAT': 'json'

}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

###############################################################################
# Celery settings
#https://docs.celeryproject.org/en/latest/getting-started/brokers/sqs.html
from kombu.utils.url import safequote
from kombu import Queue, Exchange

CELERY_BROKER_URL = "sqs://{aws_access_key}:{aws_secret_key}@".format(
    aws_access_key=safequote(config('AWS_ACCESS_KEY')),
    aws_secret_key=safequote(config('AWS_SECRET_KEY')),
)

HIGH_PRIORITY_QUEUE='HIGH_PRIORITY'
MEDIUM_PRIORITY_QUEUE='MEDIUM_PRIORITY'
LOW_PRIORITY_QUEUE='LOW_PRIORITY'

CELERY_QUEUES = (
    Queue(HIGH_PRIORITY_QUEUE, Exchange(HIGH_PRIORITY_QUEUE), routing_key=HIGH_PRIORITY_QUEUE),
    Queue(MEDIUM_PRIORITY_QUEUE, Exchange(MEDIUM_PRIORITY_QUEUE), routing_key=MEDIUM_PRIORITY_QUEUE),
    Queue(LOW_PRIORITY_QUEUE, Exchange(LOW_PRIORITY_QUEUE), routing_key=LOW_PRIORITY_QUEUE),
)

CELERY_DEFAULT_QUEUE = 'LOW_PRIORITY'
CELERY_DEFAULT_EXCHANGE = 'LOW_PRIORITY'
CELERY_DEFAULT_ROUTING_KEY = 'LOW_PRIORITY'

CELERY_BROKER_TRANSPORT_OPTIONS = {
    'region': config('AWS_REGION'),
    'visibility':3*3600,#3 hour
    'polling_interval': 3, #3 second
    'wait_time_seconds': 20, #SQS Long poll wait time
    'queue_name_prefix': config('AWS_QUEUE_PREFIX')
    }


#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_ALWAYS_EAGER=False
CELERY_IGNORE_RESULT=True
CELERY_TIMEZONE = TIME_ZONE

CELERYD_TASK_SOFT_TIME_LIMIT = 60

###############################################################################

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
